// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/accounting_system.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace OrderAccountingSystem {
  public static partial class AccountingSystemGreeter
  {
    static readonly string __ServiceName = "accounting_system.AccountingSystemGreeter";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::OrderAccountingSystem.NullRequest> __Marshaller_accounting_system_NullRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.NullRequest.Parser));
    static readonly grpc::Marshaller<global::OrderAccountingSystem.AllProductReply> __Marshaller_accounting_system_AllProductReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.AllProductReply.Parser));
    static readonly grpc::Marshaller<global::OrderAccountingSystem.ProductRequest> __Marshaller_accounting_system_ProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.ProductRequest.Parser));
    static readonly grpc::Marshaller<global::OrderAccountingSystem.ProductReply> __Marshaller_accounting_system_ProductReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.ProductReply.Parser));
    static readonly grpc::Marshaller<global::OrderAccountingSystem.AllCustomerReply> __Marshaller_accounting_system_AllCustomerReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.AllCustomerReply.Parser));
    static readonly grpc::Marshaller<global::OrderAccountingSystem.CustomerRequest> __Marshaller_accounting_system_CustomerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.CustomerRequest.Parser));
    static readonly grpc::Marshaller<global::OrderAccountingSystem.CustomerReply> __Marshaller_accounting_system_CustomerReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.CustomerReply.Parser));
    static readonly grpc::Marshaller<global::OrderAccountingSystem.AllOrderReply> __Marshaller_accounting_system_AllOrderReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.AllOrderReply.Parser));
    static readonly grpc::Marshaller<global::OrderAccountingSystem.OrderRequest> __Marshaller_accounting_system_OrderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.OrderRequest.Parser));
    static readonly grpc::Marshaller<global::OrderAccountingSystem.OrderReply> __Marshaller_accounting_system_OrderReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OrderAccountingSystem.OrderReply.Parser));

    static readonly grpc::Method<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.AllProductReply> __Method_GetAllProducts = new grpc::Method<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.AllProductReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllProducts",
        __Marshaller_accounting_system_NullRequest,
        __Marshaller_accounting_system_AllProductReply);

    static readonly grpc::Method<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply> __Method_GetProduct = new grpc::Method<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_accounting_system_ProductRequest,
        __Marshaller_accounting_system_ProductReply);

    static readonly grpc::Method<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply> __Method_AddProduct = new grpc::Method<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProduct",
        __Marshaller_accounting_system_ProductRequest,
        __Marshaller_accounting_system_ProductReply);

    static readonly grpc::Method<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply> __Method_ChangeProduct = new grpc::Method<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeProduct",
        __Marshaller_accounting_system_ProductRequest,
        __Marshaller_accounting_system_ProductReply);

    static readonly grpc::Method<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply> __Method_DeleteProduct = new grpc::Method<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProduct",
        __Marshaller_accounting_system_ProductRequest,
        __Marshaller_accounting_system_ProductReply);

    static readonly grpc::Method<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.AllCustomerReply> __Method_GetAllCustomers = new grpc::Method<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.AllCustomerReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllCustomers",
        __Marshaller_accounting_system_NullRequest,
        __Marshaller_accounting_system_AllCustomerReply);

    static readonly grpc::Method<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply> __Method_GetCustomer = new grpc::Method<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomer",
        __Marshaller_accounting_system_CustomerRequest,
        __Marshaller_accounting_system_CustomerReply);

    static readonly grpc::Method<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply> __Method_AddCustomer = new grpc::Method<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCustomer",
        __Marshaller_accounting_system_CustomerRequest,
        __Marshaller_accounting_system_CustomerReply);

    static readonly grpc::Method<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply> __Method_ChangeCustomer = new grpc::Method<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeCustomer",
        __Marshaller_accounting_system_CustomerRequest,
        __Marshaller_accounting_system_CustomerReply);

    static readonly grpc::Method<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply> __Method_DeleteCustomer = new grpc::Method<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCustomer",
        __Marshaller_accounting_system_CustomerRequest,
        __Marshaller_accounting_system_CustomerReply);

    static readonly grpc::Method<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.AllOrderReply> __Method_GetAllOrders = new grpc::Method<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.AllOrderReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllOrders",
        __Marshaller_accounting_system_NullRequest,
        __Marshaller_accounting_system_AllOrderReply);

    static readonly grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply> __Method_GetOrder = new grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrder",
        __Marshaller_accounting_system_OrderRequest,
        __Marshaller_accounting_system_OrderReply);

    static readonly grpc::Method<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.OrderReply> __Method_GetMonthlySale = new grpc::Method<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.OrderReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMonthlySale",
        __Marshaller_accounting_system_NullRequest,
        __Marshaller_accounting_system_OrderReply);

    static readonly grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply> __Method_AddOrder = new grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOrder",
        __Marshaller_accounting_system_OrderRequest,
        __Marshaller_accounting_system_OrderReply);

    static readonly grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply> __Method_ChangeOrder = new grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeOrder",
        __Marshaller_accounting_system_OrderRequest,
        __Marshaller_accounting_system_OrderReply);

    static readonly grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply> __Method_ChangeOrderStatus = new grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeOrderStatus",
        __Marshaller_accounting_system_OrderRequest,
        __Marshaller_accounting_system_OrderReply);

    static readonly grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply> __Method_DeleteOrder = new grpc::Method<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteOrder",
        __Marshaller_accounting_system_OrderRequest,
        __Marshaller_accounting_system_OrderReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::OrderAccountingSystem.AccountingSystemReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AccountingSystemGreeter</summary>
    [grpc::BindServiceMethod(typeof(AccountingSystemGreeter), "BindService")]
    public abstract partial class AccountingSystemGreeterBase
    {
      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.AllProductReply> GetAllProducts(global::OrderAccountingSystem.NullRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.ProductReply> GetProduct(global::OrderAccountingSystem.ProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.ProductReply> AddProduct(global::OrderAccountingSystem.ProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.ProductReply> ChangeProduct(global::OrderAccountingSystem.ProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.ProductReply> DeleteProduct(global::OrderAccountingSystem.ProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.AllCustomerReply> GetAllCustomers(global::OrderAccountingSystem.NullRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.CustomerReply> GetCustomer(global::OrderAccountingSystem.CustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.CustomerReply> AddCustomer(global::OrderAccountingSystem.CustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.CustomerReply> ChangeCustomer(global::OrderAccountingSystem.CustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.CustomerReply> DeleteCustomer(global::OrderAccountingSystem.CustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.AllOrderReply> GetAllOrders(global::OrderAccountingSystem.NullRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.OrderReply> GetOrder(global::OrderAccountingSystem.OrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.OrderReply> GetMonthlySale(global::OrderAccountingSystem.NullRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.OrderReply> AddOrder(global::OrderAccountingSystem.OrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.OrderReply> ChangeOrder(global::OrderAccountingSystem.OrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.OrderReply> ChangeOrderStatus(global::OrderAccountingSystem.OrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrderAccountingSystem.OrderReply> DeleteOrder(global::OrderAccountingSystem.OrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(AccountingSystemGreeterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllProducts, serviceImpl.GetAllProducts)
          .AddMethod(__Method_GetProduct, serviceImpl.GetProduct)
          .AddMethod(__Method_AddProduct, serviceImpl.AddProduct)
          .AddMethod(__Method_ChangeProduct, serviceImpl.ChangeProduct)
          .AddMethod(__Method_DeleteProduct, serviceImpl.DeleteProduct)
          .AddMethod(__Method_GetAllCustomers, serviceImpl.GetAllCustomers)
          .AddMethod(__Method_GetCustomer, serviceImpl.GetCustomer)
          .AddMethod(__Method_AddCustomer, serviceImpl.AddCustomer)
          .AddMethod(__Method_ChangeCustomer, serviceImpl.ChangeCustomer)
          .AddMethod(__Method_DeleteCustomer, serviceImpl.DeleteCustomer)
          .AddMethod(__Method_GetAllOrders, serviceImpl.GetAllOrders)
          .AddMethod(__Method_GetOrder, serviceImpl.GetOrder)
          .AddMethod(__Method_GetMonthlySale, serviceImpl.GetMonthlySale)
          .AddMethod(__Method_AddOrder, serviceImpl.AddOrder)
          .AddMethod(__Method_ChangeOrder, serviceImpl.ChangeOrder)
          .AddMethod(__Method_ChangeOrderStatus, serviceImpl.ChangeOrderStatus)
          .AddMethod(__Method_DeleteOrder, serviceImpl.DeleteOrder).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AccountingSystemGreeterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.AllProductReply>(serviceImpl.GetAllProducts));
      serviceBinder.AddMethod(__Method_GetProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply>(serviceImpl.GetProduct));
      serviceBinder.AddMethod(__Method_AddProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply>(serviceImpl.AddProduct));
      serviceBinder.AddMethod(__Method_ChangeProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply>(serviceImpl.ChangeProduct));
      serviceBinder.AddMethod(__Method_DeleteProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.ProductRequest, global::OrderAccountingSystem.ProductReply>(serviceImpl.DeleteProduct));
      serviceBinder.AddMethod(__Method_GetAllCustomers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.AllCustomerReply>(serviceImpl.GetAllCustomers));
      serviceBinder.AddMethod(__Method_GetCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply>(serviceImpl.GetCustomer));
      serviceBinder.AddMethod(__Method_AddCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply>(serviceImpl.AddCustomer));
      serviceBinder.AddMethod(__Method_ChangeCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply>(serviceImpl.ChangeCustomer));
      serviceBinder.AddMethod(__Method_DeleteCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.CustomerRequest, global::OrderAccountingSystem.CustomerReply>(serviceImpl.DeleteCustomer));
      serviceBinder.AddMethod(__Method_GetAllOrders, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.AllOrderReply>(serviceImpl.GetAllOrders));
      serviceBinder.AddMethod(__Method_GetOrder, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(serviceImpl.GetOrder));
      serviceBinder.AddMethod(__Method_GetMonthlySale, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.NullRequest, global::OrderAccountingSystem.OrderReply>(serviceImpl.GetMonthlySale));
      serviceBinder.AddMethod(__Method_AddOrder, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(serviceImpl.AddOrder));
      serviceBinder.AddMethod(__Method_ChangeOrder, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(serviceImpl.ChangeOrder));
      serviceBinder.AddMethod(__Method_ChangeOrderStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(serviceImpl.ChangeOrderStatus));
      serviceBinder.AddMethod(__Method_DeleteOrder, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrderAccountingSystem.OrderRequest, global::OrderAccountingSystem.OrderReply>(serviceImpl.DeleteOrder));
    }

  }
}
#endregion
